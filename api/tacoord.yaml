swagger: '2.0'

info:
  version: "1.0.0"
  title: TA-Coordinator
  description: The ta-coordinator component of the overall coordinator system
schemes:
  - http
  - https
securityDefinitions:
  basicAuth:
    type: basic
    description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`
paths:
  /user/login/:
    post:
      description: |
        tests login information to determine if it is correct
      parameters:
        - name: user_id
          in: query
          description: id of user
          required: true
          type: integer
        - name: password
          in: query
          description: password
          required: true
          type: string
          format: password
      responses:
        200:
          description: returns session token on success.
          schema:
            $ref: '#/definitions/Auth'
        default: 
          description: indicates operation success, returns error if applicable
          schema:
            $ref: '#/definitions/Success'
  /course/:
    post:
      description: |
        Adds a new course.
      security:
       - basicAuth: []
      parameters:
        - name: session
          in: query
          description: session token to identify the user and ensure permissable access
          required: true
          type: string
        - name: course
          in: body
          description: full id (ex. csc302s2017)
          required: true
        - name: coursecode
          in: body
          description: course code (ex. csc302)
          required: true
        - name: term
          in: body
          description: course term where 'f' = fall, 's' = winter, 'y' = year (ex. s)
          required: true
        - name: year
          in: body
          description: course year (ex. 2017)
          required: true
        - name: requirements
          in: body
          description: course requirements (ex. {req1, req2, req3})
          required: false
        - name: head_instructor
          in: body
          description: head instructor (ex. Matthew Zaleski)
          required: false
        - name: additional_instructors
          in: body
          description: Other instructors (ex. {name1, name2, name3})
          required: false
        - name: tas
          in: body
          description: TAs that have accepted position (ex. {ta1, ta2, ta3})
          required: false
        - name: expected_enrollment
          in: body
          description: Expected number of students (ex. 100)
          required: false
      responses:
        200:
          description: New course added to database
        default: 
          description: indicates operation success, returns error if applicable
          schema:
            $ref: '#/definitions/Success'
    get:
      description: |
        Gets a course by id (ex. http://localhost:3000/course?id=csc302s2017).
      security:
       - basicAuth: []
      parameters:
        - name: session
          in: query
          description: session token to identify the user and ensure permissable access
          required: true
          type: string
        - name: id
          in: query
          description: id of course to retrieve (ex. csc302s2017)
          required: true
          type: integer
      responses:
        200:
          description: Returns course data in json form
          schema:
            $ref: '#/definitions/Course'
        default:
          description: returns error information
          schema:
            $ref: '#/definitions/Success'
    put:
      description: |
        Updates a course's data.
      security:
       - basicAuth: []
      parameters:
        - name: session
          in: query
          description: session token to identify the user and ensure permissable access
          required: true
          type: string
        - name: course
          in: body
          description: course id (ex. csc302s2017)
          required: true
        - name: requirements
          in: body
          description: course requirements (ex. {req1, req2, req3})
          required: false
        - name: head_instructor
          in: body
          description: head instructor (ex. Matthew Zaleski)
          required: false
        - name: additional_instructors
          in: body
          description: Other instructors (ex. {name1, name2, name3})
          required: false
        - name: tas
          in: body
          description: TAs that have accepted position (ex. {ta1, ta2, ta3})
          required: false
        - name: expected_enrollment
          in: body
          description: Expected number of students (ex. 100)
          required: false
      responses:
        200:
          description: course data updated in database
        default: 
          description: indicates operation success, returns error if applicable
          schema:
            $ref: '#/definitions/Success'
    delete:
      description: |
        Deletes a course by id.
      security:
       - basicAuth: []
      parameters:
        - name: session
          in: query
          description: session token to identify the user and ensure permissable access
          required: true
          type: string
        - name: id
          in: query
          description: id of course to delete (ex. csc302s2017)
          required: true
          type: integer
      responses:
        200:
          description: Course deleted from database
        default: 
          description: indicates operation success, returns error if applicable
          schema:
            $ref: '#/definitions/Success'
  /course/bulk/:
    post:
      description: |
        Mass uploads course data via JSON file that matches format. Adds courses to database. If course already exists with same primary key then update with new information. This allows the same parameters as POST or PUT /course/.
        
        Example format: {"data" : [{"course" : "csc301s2017", "requirements" : "{a,b,c}"}, {"course" : "csc301f2017"}]}
      security:
       - basicAuth: []
      parameters:
        - name: session
          in: query
          description: session token to identify the user and ensure permissable access
          required: true
          type: string
        - name: data
          in: body
          description: data to add to system, refer to description above for format 
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Course'
      responses:
        200:
          description: courses added or updated in database
        default: 
          description: indicates operation success, returns error if applicable
          schema:
            $ref: '#/definitions/Success'
    get:
      description: |
        Gets all data in the system formatted in JSON.
      security:
       - basicAuth: []
      parameters:
        - name: session
          in: query
          description: session token to identify the user and ensure permissable access
          required: true
          type: string
      responses:
        200:
          description: operation success, return data
          schema:
            type: array
            items:
              $ref: '#/definitions/Course'
        default:
          description: error information
          schema:
            $ref: '#/definitions/Success'
    delete:
      description: |
        Deletes all current course data in the system.
      security:
       - basicAuth: []
      parameters:
        - name: session
          in: query
          description: session token to identify the user and ensure permissable access
          required: true
          type: string
      responses:
        200:
          description: all courses deleted from database
        default: 
          description: indicates operation success, returns error if applicable
          schema:
            $ref: '#/definitions/Success'
  /applicant/:
    post:
      description: |
        creates a new applicant
      security:
       - basicAuth: []
      parameters:
        - name: session
          in: query
          description: session token to identify the user and ensure permissable access
          required: true
          type: string
        - name: applicant
          in: body
          description: applicant information to create
          required: true
          schema:
            $ref: '#/definitions/Applicant'
      responses:
          200:
            description: New applicant added to the database
          default:
            description: indicates operation success, returns error if applicable
            schema:
              $ref: '#/definitions/Success'
    get:
      description: |
        finds and returns applicant identified by id
      security:
       - basicAuth: []
      parameters:
        - name: session
          in: query
          description: session token to identify the user and ensure permissable access
          required: true
          type: string
        - name: student_id
          in: query
          description: student id of applicant to find
          required: true
          type: integer
      responses:
        200:
          description: returns desired student information
          schema:
            $ref: '#/definitions/Applicant'
        default:
          description: returns error information
          schema:
            $ref: '#/definitions/Success'
    put:
      description: |
        updates applicant
      security:
       - basicAuth: []
      parameters:
        - name: session
          in: query
          description: session token to identify the user and ensure permissable access
          required: true
          type: string
        - name: applicant
          in: body
          description: updated applicant
          required: true
          schema:
            $ref: '#/definitions/Applicant'
      responses:
        200:
          description: applicant data updated in database
        default:
          description: indcates operation usccess, returns error if applicable
          schema:
            $ref: '#/definitions/Success'
    delete:
      description: |
        deletes applicant by id
      security:
       - basicAuth: []
      parameters:
        - name: session
          in: query
          description: session token to identify the user and ensure permissable access
          required: true
          type: string
        - name: a_id
          in: query
          description: the id of applicant to delete
          required: true
          type: integer
      responses:
        200:
          description: applicant deleted from database
        default:
          description: indcates operation usccess, returns error if applicable
          schema:
            $ref: '#/definitions/Success'
  /applicant/filter/:
    post:
      description: |
        gets list of applicants based on filter, offer and limit
      security:
       - basicAuth: []
      parameters:
        - name: session
          in: query
          description: session token to identify the user and ensure permissable access
          required: true
          type: string
        - name: filter
          in: body
          description: options to filter list of applicants
          required: false
          schema:
            $ref: '#/definitions/ApplicantFilter'
        - name: limit
          in: query
          description: limit on number of search results
          required: false
          type: integer
        - name: offset
          in: query
          description: only search results after offset will be returned, for paging.
          required: false
          type: integer
      responses:
        200:
          description: returns list of applicants
          schema:
            type: array
            items:
              $ref: '#/definitions/Applicant'
        default:
          description: returns error information
          schema:
            $ref: '#/definitions/Success'
  /offer/:
    post:
      description: |
        creates a new offer
      security:
       - basicAuth: []
      parameters:
        - name: session
          in: query
          description: session token to identify the user and ensure permissable access
          required: true
          type: string
        - name: course
          in: body
          description: full id (ex. csc302s2017)
          required: true
        - name: coursecode
          in: body
          description: course code (ex. csc302)
          required: true
        - name: term
          in: body
          description: course term (ex. winter)
          required: true
        - name: year
          in: body
          description: course year (ex. 2017)
          required: true
        - name: utorid
          in: body
          description: utorid of the applicant (ex. sipickiv)
          required: true
      responses:
        200:
          description: New offer added to database
        default: 
            description: indicates operation success, returns error if applicable
            schema:
              $ref: '#/definitions/Success'
    get:
      description: |
        finds and returns offer identified by course and utorid
        (ex. http://localhost:3000/offer?id=csc302s2017&utorid=sipickiv)
      security:
       - basicAuth: []
      parameters:
        - name: session
          in: query
          description: session token to identify the user and ensure permissable access
          required: true
          type: string
        - name: utorid
          in: query
          description: id of applicant
          required: true
          type: string
        - name: id
          in: query
          description: id of course to retrieve (ex. csc302s2017)
          required: true
          type: integer
      responses:
        200:
          description: Returns desired offer information in JSON form
          schema:
            $ref: '#/definitions/Offer'
        default:
          description: returns error information
          schema:
            $ref: '#/definitions/Success'
    put:
      description: |
        updates offer
      security:
       - basicAuth: []
      parameters:
        - name: session
          in: query
          description: session token to identify the user and ensure permissable access
          required: true
          type: string
        - name: course
          in: body
          description: course id (ex. csc302s2017)
          required: true
        - name: utorid
          in: body
          description: id of applicant
          required: true
          type: string
        - name: assigned
          in: query
          description: assigned status of TA offer
          required: false
          type: boolean
        - name: accepted
          in: query
          description: accepted status of TA offer
          required: false
          type: boolean        
          schema:
            $ref: '#/definitions/Offer'
      responses:
        200:
          description: offer data updated in database
        default: 
          description: indicates operation success, returns error if applicable
          schema:
            $ref: '#/definitions/Success'
    delete:
      description: |
        deletes offer by id
      security:
       - basicAuth: []
      parameters:
        - name: session
          in: query
          description: session token to identify the user and ensure permissable access
          required: true
          type: string
        - name: id
          in: query
          description: id of course to retrieve (ex. csc302s2017)
          required: true
          type: integer
        - name: utorid
          in: query
          description: id of applicant
          required: true
          type: string    
      responses:
        200:
          description: Course deleted from database
        default: 
          description: indcates operation success, returns error if applicable
          schema:
            $ref: '#/definitions/Success'
  /offer/pending/:
    get:
      description: |
        finds all pending offers
      security:
       - basicAuth: []
      parameters:
        - name: session
          in: query
          description: session token to identify the user and ensure permissable access
          required: true
          type: string
          schema:
            $ref: '#/definitions/OfferFilter'
      responses:
        200:
          description: returns all pending offers
          schema:
            type: array
            items:
              $ref: '#/definitions/Offer'
        default:
          description: returns error information
          schema:
            $ref: '#/definitions/Success'
          
definitions:
  Applicant:
    type: object
    properties:
      utorid: #Student's UTORid
        type: string
      a_id:  # would be student id
        type: integer
        format: int32
      family_name:
        type: string
      given_name:
        type: string
      program:  # undergrad, masters, phd
        type: string
      year:
        type: integer
      phone:
        type: integer
        format: int32
      email:
        type: string
      department:
        type: string
      ta_courses:
        type: string
        description: past courses ta'd (ex. {course1, course2, course3})
      courses:
        type: string
        description: courses taken (ex. {course1, course2, course3})
      declined:
        type: boolean
      declined_count:
        type: integer
      declined_courses:
        type: string
        description: courses prev declined (ex. {course1, course2, course3})
  Course:
    type: object
    properties:
      c_id:  # course id 
        type: integer
        format: int32
      head_instructor:  # lead instructor for course, has managmennt permission
        $ref: '#/definitions/Instructor'
      additional_instructors:
        type: array
        items:
          $ref: '#/definitions/Instructor'
      name:
        type: string
      semester:
        type: string
      start_date:
        type: string
        format: date
      expected_enrollment:  # expected size of class
        type: integer
      preference:  # instructor message to coordinator
        type: string
      desired_applicants:  # applicants instructor requests
        type: array
        items:
          $ref: '#/definitions/Applicant'
      avoid_applicants:  # applicants instructor does not want
        type: array
        items:
          $ref: '#/definitions/Applicant'
      assigned_applicants:
        type: array
        items:
          $ref: '#/definitions/Applicant'
      flagged_applicants:
        type: array
        items:
          $ref: '#/definitions/Applicant'
      tas:
        type: array
        items:
          $ref: '#/definitions/Applicant'
  Offer:
    type: object
    properties:
      o_id:
        type: integer
        format: int32
      course:
        $ref: '#/definitions/Course'
      applicant:
        $ref: '#/definitions/Applicant'
      hours:
        type: integer
      approved:
        type: boolean
      accepted:
        type: boolean
  Instructor:
    type: object
    properties:
      i_id:  # instructor id, employee number
        type: integer
        format: int32
      family_name: 
        type: string
      given_name:
        type: string
      email:
        type: string
  ApplicantFilter:
    type: object
    properties:
      name: 
        type: string
      program:
        type: string
  OfferFilter:
    type: object
    properties:
      course:  # course id
        type: integer
      applicant:  # applicant id
        type: integer
  Auth:
    type: object
    properties:
      token:
        type: string
      timestamp:
        type: string
        format: dateTime
  Success:
    type: object
    properties:
      success:
        type: boolean
      error_code:
        type: integer
        format: int32
      error_mst:
        type: string
